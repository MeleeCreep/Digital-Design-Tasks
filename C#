using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;

namespace Test_task
{
    class Program
    {
        //Код работает, но есть некоторые непонятные мне моменты, которые я не в силах исправить,
        //по типу счета пустых символов. А так же посчёт слов идет без учета регистра,
        //таким образом в файле могут встречаться одинаковые слова,
        //отличие которых заключаеться в регистре первого симлова слова 
        static void Main(string[] args)
        {
            //Здесь нужно указать путь чтения
            string wpath = @"C:\Users\denxa\Desktop\Уникальные слова.txt";

            //Здесь нужно указать путь записи в файл
            string path = @"C:\Users\denxa\Desktop\Война и мир 1.txt";

            //Создаем переменную, в которую записываем все содежимое нашего файла
            string s = File.ReadAllText(path);

            //Создаем переменную, в которую записываем нашу переменную с текстом,
            //и преобразуем ее в список с указанием знаков разделения
            var l = s.Split(new Char[] { ' ', ' ', '.', ',', ':', '\t', '-', '>', '<', '!', '?', '[', ']', 
                '"', '«', '»', '_', '–', '(', ')', ';', '/', '\n' }).ToList();

            //Создаем словарь с типом string для ключя и типом int для значения, чтобы реализовать запись и подсчёт
            //слов в в наш словарь
            IDictionary<string, int> opendict = new Dictionary<string,int>();

            //Далее для каждого слова в нашем списке реализуем метод для записи в словарь
            foreach (var sr in l)
            {
                //Запись нового слова в словарь и присваивание ему единицу
                if (!opendict.ContainsKey(sr))
                {
                    opendict.Add(sr, 1);
                }

                //Увеличение значение Value на 1 для встречного слова, которое уже было записано в словарь
                else if (opendict.ContainsKey(sr))
                {
                    opendict[sr] += 1;
                }
            }

            //Создаем переменную класса StreamWriter и указываем для него путь создания файла записи
            using (StreamWriter stw = new StreamWriter(wpath))
            {
                //Реализуем метод для записи каждого значения нашего словаря в файл 
                foreach (var word in opendict.OrderByDescending(i=>i.Value))
                {
                    stw.WriteLine($"{word.Key}: {word.Value}");
                }
                //Закрываем наш файл для корректной работы
                stw.Close();
            }
        }
    }
}
